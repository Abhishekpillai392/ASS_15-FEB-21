


Q.1 Write a program in C to create a linked list of 3 nodes which stores integer values. Add one more node in the begining of linked list & Display the list.

=>
#include<stdio.h>
#include<stdlib.h>

typedef struct nd             
{                           
    int data;
    struct nd *next;
}node;

typedef struct ls
{
	node *head,*tail;
}list;

node* createNode(int no)
{
    node *np;
    
    np=(node*)malloc(sizeof(node));  
    
    if(np == NULL)
    {
        printf("Memory not available");
        exit(0);    
    }
    
    np->data=no;
    np->next=NULL;
    
    return np;
}

void initalize(list *p)
{
	p->head = NULL;
	p->tail = NULL;
}

void insertAtail(list *p,int x)
{
	node *np;
	np = createNode(x);
	if(p->head==NULL)
	p->head = np;
	else
	p->tail->next = np;
	p->tail = np;
}

void traverse(list *p)
{
    node *sp;
    sp = p->head;
    
    while(sp!=NULL)
    {
    	printf("%d",sp->data);
    	sp=sp->next;
	}
}
int main()
{    
    list *p;
    
    p = (list*) malloc(sizeof(list));
    
    if(p == NULL)
    {
    	printf("MEMORY UNVAVAILABLE");
    	exit(0);
	}
	
	initalize(p);
	insertAtail(p,100);
	insertAtail(p,200);
	insertAtail(p,300);
	
	traverse(p);
	
	free(p);
    
}
=================================================

Q.2 Create a stack of 5 names in Java.

=>

//ass_2.class

package pack1;

import java.util.Stack;

public class ass_2 {

	public static void main(String[] args) {

		Stack<String> st= new Stack<String>();
		
		st.push("ABHISHEK");
		st.push("ABHINAV");
		st.push("ABHILASH");
		st.push("RONAUK");
		st.push("EDEN");
		
		System.out.println(st);
	}

}

--------------------------------------------------------------------------------------
Q.3 Create an interface I1, Abstract class A1. Make a class Demo which inherit I1 & A1. I1 has a method getArea() and A1 has an absract method as getFactorial().
   Demo class calculates the Area of circle & also factorial of the number which user enters.

=>

//demo.class

package pack1;

import java.util.Scanner;

interface I1
{
	public void getArea();
}

abstract class A1 implements I1
{
	public abstract void getfac();
	
}

public class demo extends A1{
    public static double rad;
	public static void main(String[] args) {
	Scanner sc = new Scanner(System.in);
	
	demo d = new demo();
	
	System.out.println("ENTER A NUMBER TO FIND OUT AREA AND FACTORIAL OF IT");
	rad = sc.nextInt();	
	
	d.getArea();
	d.getfac();
	}

	@Override
	public void getArea() {
		double PI = 3.14;
		double area = PI*rad*rad;
		
		System.out.println("AREA OF CIRCLE : "+area);
	}

	@Override
	public void getfac() {
		int res = 1;
		
		for(int x=2;x<=rad;x++)
		{
			res *= x;
		}
		System.out.println("FACTORIAL OF THE NUMBER : "+res);
	}

}
--------------------------------------------------------------------------------------
Q.4 Create a Thread class on implementing Runnable interface . Also the same Thread class extends another class and displays info of that class also.

=>

//ass_4

package pack1;

class XYZ
{
	public void getinfo()
	{
		System.out.println("THIS IS XYZ CLASS");
	}
}

class threadcl extends XYZ implements Runnable
{
	@Override
	public void run() 
	{
		getinfo();
	}
	
}
public class ass_4 {

	public static void main(String[] args) {
		
    threadcl t1 = new threadcl();
    
    Thread th1 = new Thread(t1);
    
    th1.start();
    
	}

}

--------------------------------------------------------------------------------------
Q.5 Define a function in the PLSQL which accepts the age of a student and returns the year of birth.Create a servlet to display the Year of birth based on the entered 
   age of a student.Make a JSP page to take age as input and sends it to the servlet
 
=>

//fun_ass5

create or replace function fun_ass5(age number) RETURN number
as
dat number;
BEGIN

dat := 2021 - age;
return dat;
END;

//ass5.jsp

<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
    pageEncoding="ISO-8859-1"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="ISO-8859-1">
<title>Insert title here</title>
</head>
<body>
<form action="serv_5">
AGE <input type="number" name="ag">
<input type="submit" value="SUBMIT">
</form>
</body>
</html>

//servlet

package pack1;

import java.io.IOException;
import java.io.PrintWriter;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.DriverManager;
import java.util.concurrent.Callable;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.sun.xml.internal.ws.wsdl.writer.document.Types;

public class serv_5 extends HttpServlet {
	private static final long serialVersionUID = 1L;
    
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
	PrintWriter out = response.getWriter();
	
	int age = Integer.parseInt(request.getParameter("ag"));
	
	try
	{
		Class.forName("oracle.jdbc.driver.OracleDriver");
		
		Connection cn = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe","system","root");
		
		CallableStatement cmt = cn.prepareCall("{?=call fun_ass5(?)} ");
		
		cmt.setInt(2, age);
		
		cmt.registerOutParameter(1, Types.INTEGER);
		
		cmt.execute();
		
		out.print("YOUR AGE IS "+age+" AND YOUR BIRTH YEAR IS "+cmt.getInt(1));
		
		cmt.close();
		
		cn.close();
		
		
	}
	catch(Exception ea)
	{
		ea.printStackTrace();
	}
}
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		doGet(request, response);
	}

}

////////////////////////////////////////////////////////////////////////////////

--------------------------------------------------------------------------------------
Q.6 Create a procedure in the PLSQL which deletes a record from the database table.

=>

//database

create OR replace PROCEDURE prod_ass_6
IS

BEGIN
delete from emp200 where eid=102;
END;

--------------------------------------------------------------------------------------
Q.7 Make two servlets and write the configuration details of database driver in the web.xml file. Both servlets get the same information from web.xml file .One of the
   servlet is adding information of the employee in database and second servlet is displaying all information from the database. Information can be about any Product.

=>

//ass_7.jsp

<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
    pageEncoding="ISO-8859-1"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="ISO-8859-1">
<title>Insert title here</title>
</head>
<body>
<form action="serv_7a">
PRODUCT ID<input type="number" name="proid">
PRODUCT NAME<input type="text" name="pronm">
PRODUCT PRICE<input type="text" name="proct">
<input type="submit" value="ENTER">
</form>
</body>
</html>

//serv_7a

package pack1;

import java.io.IOException;
import java.io.PrintWriter;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

public class serv_7a extends HttpServlet {
	private static final long serialVersionUID = 1L;
   
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
	PrintWriter pw = response.getWriter();
	response.setContentType("text/html");
	
	int ID = Integer.parseInt(request.getParameter("proid"));
	
	String NM = request.getParameter("pronm");
	
	String CY = request.getParameter("proct");
	
	try 
	{
       Class.forName("oracle.jdbc.driver.OracleDriver");
       
       Connection cn = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe","system","root");
       
       PreparedStatement pmt = cn.prepareStatement("insert into prod_7 values(?,?,?)");
       
       pmt.setInt(1,ID);
       pmt.setString(2,NM);
       pmt.setString(3,CY);
       
       int i = pmt.executeUpdate();
       
       System.out.println("SUCCESSFULLY INSERTED....");			
	}
	catch(Exception ea)
	{
		ea.printStackTrace();
	}
	
	response.sendRedirect("serv_7b");
	}
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		doGet(request, response);
	}

}

//serv_7b

package pack1;

import java.io.IOException;
import java.io.PrintWriter;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

public class serv_7b extends HttpServlet {
	private static final long serialVersionUID = 1L;
   
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
	PrintWriter pw = response.getWriter();
	response.setContentType("text/html");

	try 
	{
       Class.forName("oracle.jdbc.driver.OracleDriver");
       
       Connection cn = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe","system","root");
       
       Statement smt = cn.createStatement();
       
       String query = "select proid,pronm,proct from prod_7";
       
       ResultSet rs = smt.executeQuery(query);
       
       while(rs.next())
       {
    	   pw.print("PRODUCT ID : "+rs.getInt(1)+"<br>PRODUCT NAME : "+rs.getString(2)+"<br>PRODUCT PRICE : "+rs.getInt(3));
    	   pw.print("<br>///////////////////////////////////////////////////////////////////////////////");
       }
       
       pw.println("<br>SUCCESSFULLY DISPLAYED !!!!");	
       
       rs.close();
       
       smt.close();
       
       cn.close();
	}
	catch(Exception ea)
	{
		ea.printStackTrace();
	}	
}
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		doGet(request, response);
	}

}

------------------------------------------------------------------------------------
Q.8 Create a table in the database which stores the records of 5 books like bookId, BookTitle, Author,Price.Make a servlet which access all the details of the books
   from database and display on the web page created dynamically.

=>

//database

create table recbooks(bid number(10),btitle varchar2(30),author varchar2(30),price number(30));

insert all
into recbooks(bid,btitle,author,price) values(1011,'FAULT IN OUR STARS','DR.GREEN',2300)
into recbooks(bid,btitle,author,price) values(2345,'REVOLUTION 2020','CHETAN BHAGHAT',1300)
into recbooks(bid,btitle,author,price) values(7622,'THREE MISTAKES OF MY LIFE','CHETAN BHAGHAT',1000)
into recbooks(bid,btitle,author,price) values(2393,'RICH DAD,POOR DAD','ROBERT.T.KIYOSAKI',2450)
into recbooks(bid,btitle,author,price) values(5321,'WINGS OF FIRE','ABJ ABDUL KALAM',5320)

select * from dual;

select * from recbooks;

//serv_8

package pack1;

import java.io.IOException;
import java.io.PrintWriter;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

public class serv_8 extends HttpServlet {
	private static final long serialVersionUID = 1L;
   
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
	PrintWriter pw = response.getWriter();
	response.setContentType("text/html");

	try 
	{
       Class.forName("oracle.jdbc.driver.OracleDriver");
       
       Connection cn = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe","system","root");
       
       Statement smt = cn.createStatement();
       
       String query = "select bid,btitle,author,price from recbooks";
       
       ResultSet rs = smt.executeQuery(query);
       
       while(rs.next())
       {
    	   pw.print("BOOK ID : "+rs.getInt(1)+"<br>BOOK NAME : "+rs.getString(2)+"<br>BOOK AUTHOR : "+rs.getString(3)+"<br>BOOK PRICE : "+rs.getInt(4));
           pw.print("<br>/////////////////////////////////////////////////////////////////////<br>");
       }
       
       pw.print("SUCCESSFULLY DISPLAYED");	
       
       rs.close();
       
       smt.close();
       
       cn.close();
	}
	catch(Exception ea)
	{
		ea.printStackTrace();
	}
	
	}
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		doGet(request, response);
	}

}
--------------------------------------------------------------------------------------Q.9 Create a Class Customer where custId,Cname,Ccity should be declared as memebers . Define getter & setter method in this class which sets the values for customer.
   Create a servlet and a JSP Page. In Jsp page make a form which takes custId, Cname and Ccity from user and these details should be submitted into the Customer 
   class and through this class all data should be saved into the database. 

=>

//jsp_9.jsp

<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
    pageEncoding="ISO-8859-1"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="ISO-8859-1">
<title>Insert title here</title>
</head>
<body>
<form action="serv_9" method="get">
<fieldset>
<legend>CUSTOMER DETAILS</legend>
CUSTOMER ID<input type="number" name="cusid">
CUSTOMER NAME<input type="text" name="cusnm">
CUSTOMER CITY<input type="text" name="cuscity">
<input type="submit" value="SUBMIT">
</fieldset>
</form>
</body>
</html>

//serv_9

package pack1;

import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

public class serv_9 extends HttpServlet {
	private static final long serialVersionUID = 1L;
    
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
	PrintWriter pw = response.getWriter();
	
	int id = Integer.parseInt(request.getParameter("cusid"));
	String nm = request.getParameter("cusnm");
	String cy = request.getParameter("cuscity");
		
	Cust cd = new Cust();
	
	cd.setCustID(id);
	cd.setcNAME(nm);
	cd.setcCITY(cy);
	
	cd.sub();
		
	}
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		doGet(request, response);
	}

}

//cust.java

package pack1;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;


public class Cust {
    public int custID;
    public String cNAME,cCITY;
    
    public Cust()
    {
    	this.custID = 101;
    	this.cNAME = "ASHWIN";
    	this.cCITY = "PUNE";
    }
	public int getCustID() {
		return custID;
	}
	public void setCustID(int custID) {
		this.custID = custID;
	}
	public String getcNAME() {
		return cNAME;
	}
	public void setcNAME(String cNAME) {
		this.cNAME = cNAME;
	}
	public String getcCITY() {
		return cCITY;
	}
	public void setcCITY(String cCITY) {
		this.cCITY = cCITY;
	}
	
	public void sub()
	{
		try 
		{
	       Class.forName("oracle.jdbc.driver.OracleDriver");
	       
	       Connection cn = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe","system","root");
	       
	       PreparedStatement pmt = cn.prepareStatement("insert into cusd values(?,?,?)");
	       
	       pmt.setInt(1,custID);
	       pmt.setString(2,cNAME);
	       pmt.setString(3,cCITY);
	       
	       int i = pmt.executeUpdate();
	       
	       System.out.println("Successfully Inserted");			
		}
		catch(Exception ea)
		{
			ea.printStackTrace();
		}
	}

}

---------------------------------------------------------------------------
Q.10 Create 4 text boxes and a submit button in Angular View. Take firstname,lastname,email and age as an input. When clicked on the submit button All entered details 
   should be displayed in the same page. Use Two way binding.

=>

//head10.component.html

<h2>HEAD - 10</h2>
FIRSTNAME <input [(ngModel)]="firstname"><br>
LASTNAME<input [(ngModel)]="lastname"><br>
EMAIL <input [(ngModel)]="email"><br>
AGE <input [(ngModel)]="age"><br>
<button (click)="getdetails()">SUBMIT</button>

<h2>{{fn}}<br>
{{ln}}<br>
{{em}}<br>
{{ag}}</h2>


//head10.component.ts

import { Component, OnInit } from '@angular/core';

@Component({
  selector: 'app-head10',
  templateUrl: './head10.component.html',
  styleUrls: ['./head10.component.css']
})
export class Head10Component implements OnInit {

  constructor() { }

  ngOnInit(): void {
  }
  firstname:string;
  lastname:string;
  email:string;
  age:number;

  fn:string;
  ln:string;
  em:string;
  ag:number;

  getdetails()
  {
     this.fn = this.firstname;
     this.ln = this.lastname;
     this.em = this.email;
     this.ag = this.age;
  }
}

--------------------------------------------------------------------------------------

Q.11 Create two components Parent and child.In child component, create an array of 4 employee records as name,email,age,city . Make a button in the child view .Once 
   clicked on the button, All records from the  the child should be displayed in the Parent view. Use child to Parent data transfer concept.

=>

//child.component.html

<h2>CHILD COMPONENT</h2>

<button (click)="getarr()">GO</button>

//child.component.ts

import { Component, OnInit, Output,EventEmitter } from '@angular/core';

@Component({
  selector: 'app-child2',
  templateUrl: './child2.component.html',
  styleUrls: ['./child2.component.css']
})
export class Child2Component implements OnInit {

  constructor() { }

  ngOnInit(): void {
  }
  arr:any[];

  @Output() eve = new EventEmitter<any>();
  
  getarr()
  {
  this.arr = ["ABHISHEK","abhishek123@gmail.com",20,"PUNE"]; 

  this.eve.emit(this.arr[0]+" "+this.arr[1]+" "+this.arr[2]+" "+this.arr[3]);
  }
}


//parent.component.html

<h2>PARENT COMPONENT</h2>

<app-child2 (eve)="getarray($event)"></app-child2>
<h2>{{arr}}</h2>

//parent.component.ts

import { Component, OnInit } from '@angular/core';

@Component({
  selector: 'app-parent2',
  templateUrl: './parent2.component.html',
  styleUrls: ['./parent2.component.css']
})
export class Parent2Component implements OnInit {

  constructor() { }

  ngOnInit(): void {
  }

  arr:any;

  getarray(mess:any)
  {
    this.arr = mess;
  }
}

--------------------------------------------------------------------------------------
Q.12 Create a service which stores name,email and age of 5 students in the array of objects. Make 2 components Parent & child. Create a button in the child component
   when button is clicked , all records from the service should be displayed in the Parent component.

=>
//myservice

import { Injectable } from '@angular/core';

@Injectable({
  providedIn: 'root'
})
export class MyserService {

  constructor() { }
  
  arr1:any[] = ["ABHISHEK","abhishekpill@gmail.com",18];
  arr2:any[] = ["TIJU","tijumath@gmail.com",23];
  arr3:any[] = ["APARNA","chinnu@gmail.com",24];
  arr4:any[] = ["ADITYA","adiaman@gmail.com",21];
  arr5:any[] = ["VIDYA","vidyavox@gmail.com",26];

  getarray1()
  {
      return this.arr1[0]+" "+this.arr1[1]+" "+this.arr1[2];
  }

  getarray2()
  {
      return this.arr2[0]+" "+this.arr2[1]+" "+this.arr2[2];
  }
  
  getarray3()
  {
      return this.arr3[0]+" "+this.arr3[1]+" "+this.arr3[2];
  }
  
  getarray4()
  {
      return this.arr4[0]+" "+this.arr4[1]+" "+this.arr4[2];
  }
  
  getarray5()
  {
      return this.arr5[0]+" "+this.arr5[1]+" "+this.arr5[2];
  }
}


//child.component.html

<p>CHILD PAGE</p>
<button (click)="getarr()">GO</button>

//child.component.ts

import { Component, OnInit, Output ,EventEmitter } from '@angular/core';

@Component({
  selector: 'app-child3',
  templateUrl: './child3.component.html',
  styleUrls: ['./child3.component.css']
})
export class Child3Component implements OnInit {

  constructor() {}

  ngOnInit(): void {
  }

  @Output() event = new EventEmitter<string>();
  
  getarr()
  {
    this.event.emit();
  }

}

//parent.component.html

<h2>PARENT PAGE</h2>

<app-child3 (event)="getarrays($event)"></app-child3>
<h2>{{a1}}</h2>
<h2>{{a2}}</h2>
<h2>{{a3}}</h2>
<h2>{{a4}}</h2>
<h2>{{a5}}</h2>


//parent.component.ts

import { Component, OnInit } from '@angular/core';
import { MyserService } from '../myser.service';

@Component({
  selector: 'app-parent3',
  templateUrl: './parent3.component.html',
  styleUrls: ['./parent3.component.css']
})
export class Parent3Component implements OnInit {

  a1:any;
  a2:any;
  a3:any;
  a4:any;
  a5:any;

  constructor(private ms : MyserService) 
  {}

  ngOnInit(): void {
  }

  getarrays(fun:any)
  {
    this.a1 = this.ms.getarray1();
    this.a2 = this.ms.getarray2();
    this.a3 = this.ms.getarray3();
    this.a4 = this.ms.getarray4();
    this.a5 = this.ms.getarray5();
  }

  
}

--------------------------------------------------------------------------------------
Q.13 Write a JQuery script which changes the default dimensions(width,height) of an image and background color to blue. Image should be in the center of the web Page.

=>

//ass_13.html

<html>
<head>
<style>
img
    {
        width: 350px;
        height: 200px;
        padding: 50px;
    }
    
</style>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    
</head>
    
<body>
<center>
<img src="inception.jpeg">
    
    <script>
    $(document).ready(function(){
        $("img").click(function(){
        $(this).animate({
            width:"700px",
            height:"400px"
        },"fast"),
        
        $("body").css({backgroundColor:"darkblue"})
            
         });
    });
    
    </script>
</center>
</body>
</html>

--------------------------------------------------------------------------------------
Q.14 Create an HTML page and make an image on it. Aplly the fadeIn, fadeOut,fadeToggle, hide, show, Toggle effect on the same image. For every effect a seperate button
   should be defined.

=>

//ass_14.html

<html>
<head>
<style>
img
    {
        width: 700px;
        height: 400px;
        padding: 50px;
    }
    
button
    {
        background-color: firebrick;
        color: aqua;
    }
</style>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    
</head>
    
<body bgcolor="#270b0b">
     
    <button class="b1">FADE IN</button>
    <button class="b2">FADE OUT</button>
    <button class="b3">FADE TOGGLE</button>
    <button class="b4">HIDE</button>
    <button class="b5">SHOW</button>
    <button class="b6">TOGGLE</button>
<center>
<img src="LAST_STILL.jpeg">
    
    <script>
        $(document).ready(function(){
         $("button.b1").click(function(){
             $("img").fadeIn(1000);
         });
        $("button.b2").click(function(){
             $("img").fadeOut(1000);
         });
            $("button.b3").click(function(){
             $("img").fadeToggle(1000);
         });
            $("button.b4").click(function(){
             $("img").hide(1000);
         });
            $("button.b5").click(function(){
             $("img").show(1000);
         });
            $("button.b6").click(function(){
             $("img").toggle(1000);
         });
        });
    </script>
   
</center>
</body>
</html>

--------------------------------------------------------------------------------------
Q.15 Make a Javascript function which changes the background color of the body. Make anoher function which takes a string as Input and apply all string related functions
   on the string passed.

=>

<html>
<head>
<style>
</style>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    
</head>
<form name="myform"> 
TEXT<input type="text" name="tx" onkeypress="style1()"><br>    
NUMBER<input type="text" name="num"><br>
TEXT<input type="text" name="em"><br>
<input type="button" onclick="style2()" value="enter">    
</form>
    
<h2 id="c1"> </h2>
<h2 id="c2"> </h2>
<h2 id="c3"> </h2>


<body>

    <script>
        function style1()
        {
            document.body.style.backgroundColor="greenyellow";
            document.body.style.Color="BLACK";
        }
        
        function style2()
        {
            var txt = document.myform.tx.value;
            var nm = document.myform.num.value;
            var em = document.myform.em.value;
            
            document.getElementById ("c1").innerHTML=txt.toUpperCase();
            document.getElementById ("c2").innerHTML=nm.split("-");
            document.getElementById ("c3").innerHTML=em.toLowerCase();
           
        }
    </script>
   
</body>
</html>

--------------------------------------------------------------------------------------
Q.16 Create an XML code and JSON code to store the following information about a city.
   Store 5 cities records

   Cities 
         city--> name,population,area   

=>

//xml.file

<?xml version="1.0" encoding="UTF-8"?>

<cities>

<city>
<name>PUNE</name>
<population>40000000</population>
<area>500</area>  </city>

<city>
<name>BANARAS</name>
<population>400000</population>
<area>500</area>  </city>

<city>
<name>SATARA</name>
<population>2300000</population>
<area>320</area>  </city>

<city>
<name>NAGPUR</name>
<population>700000</population>
<area>401</area>  </city>

<city>
<name>SOLAPUR</name>
<population>1210000</population>
<area>200</area>  </city>
</cities>

//json code

<html>
<head>
<style>
</style>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    
</head>


<body>
<script>
    var json = {city : [{name:"PUNE",
                        population:40000000,
                        area:500},
                       {name:"SATARA",
                        population:12100000,
                        area:400},
                       {name:"NAGPUR",
                        population:97700000,
                        area:500},
                       {name:"MUMBAI",
                        population:23200000,
                        area:328},
                       {name:"SOLAPUR",
                        population:401230000,
                        area:350}]};
    
    document.write("<table border=3>");
    document.write("<center>")
    document.write("<caption><h2><u>CITIES</u></h2></caption>");
    document.write("<tr><td><b>NAME</b></td><td><b>POPULATION</b></td><td><b>AREA</b></td></tr>");
    
    for(var val=0;val<json.city.length;val++)
        {
            
        document.write("<tr><td>"+json.city[val].name+"</td><td>"+json.city[val].population+"</td><td>"+json.city[val].area+"</td></tr>");
    
        }
    document.write("</center>")
    document.write("</table>")
</script>    
</body>
</html>

===========================================================================
